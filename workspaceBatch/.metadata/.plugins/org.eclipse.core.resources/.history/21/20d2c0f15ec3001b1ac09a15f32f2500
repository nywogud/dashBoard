package com.jhl.batchTest.controller;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.net.http.HttpHeaders;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;

import com.jhl.batchTest.service.MemberService;
import com.jhl.batchTest.vo.MemberVO;

@Controller
public class HomeController {

	private static final String path = "d:/csvFile/";

	@Autowired
	MemberService memberService;

	@RequestMapping("/")
	public String home(MemberVO memberVO) throws Exception {

		// 멤버A의 데이터를 받아옴.
		List<MemberVO> memberList = memberService.getMembers();

		// JOB1. 멤버A의 데이터를 멤버B에 적재.
		for (int i = 0; i < memberList.size(); i++) {

			memberVO.setMemberId(memberList.get(i).getMemberId());
			memberVO.setName(memberList.get(i).getName());
			int memberId = memberVO.getMemberId();
			String name = memberVO.getName();
			memberService.insertData(memberId, name);

			// insert한 내용을 commit
			memberService.commit();
		}

		// JOB2. 멤버A의 데이터를 CSV파일로 다운로드
		try {
			BufferedWriter fw = new BufferedWriter(new FileWriter(path + "/" + "loadDataA.csv", false));

			for (int i = 0; i < memberList.size(); i++) {
				fw.write(memberList.get(i).getMemberId() + "," + memberList.get(i).getName());
				fw.newLine();

			}
			fw.flush();
			fw.close();
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		// 경로에 해당 d:/csvFile/loadDataA.csv 파일이 있는지 확인
		File file = new File("d:/csvFile/loadDataA.csv");
		
		boolean isExist = file.exists();
		
		if(isExist) {
			//dataC DB를 먼저 TRUNCATE함.
			
			memberService.truncateData();
			
			
			//파일 있으면 파일을 읽어와 dataC DB에 적재
			
			
			
		}else {
			//파일이 없을 때 로그 기록?
		}
		
		

		return "home";
	}
}
